Guava Cache Stats Counter Micro Benchmark
=========================================

Available here: https://github.com/al3ks/cachestatsmicrobench

Aim
---

Purpose of this experiment is to determine the most efficient means of implementing a high performance counter that can be used in heavily multithreaded applications.

The subjects in this experiment are:
    * Control - A simple counter that uses a primitive long and synchronized methods.
    * Striped64 - A counter based on Doug Lea's Stripe64 class (and LongAdder wrapper class).
    * Atomic - An implementation using atomic logs.
    * StripedLocalLong - My own implementation inspired by Stripe64 with the aim of not using sun.misc.Unsafe methods
    * StripedAtomicLong - An alternative using striped atomic longs.
    * StripedLockLock - Another alternative using striped locks and primitive longs.

Setup
-----

Hardware:
    * QuadCore Intel Core i7-2600K, 4200 MHz (42 x 100) (Hyperthreading Enabled)
    * Asus Maximus IV Extreme-Z  Mobo
    * Intel Cougar Point Z68, Intel Sandy Bridge
    * 16281 MB RAM  (DDR3 1998 MHz)

Software:
    * Microsoft Windows 7 Ultimate 6.1.7601.17944 (Win7 RTM)
    * Oracle JDK 1.6.0_37 (64-bit)

Test
----

Implemented here: https://github.com/al3ks/cachestatsmicrobench/blob/master/src/main/java/CacheStatsMicroBench.java

Other than the Control, the tests are run twice just to shake off any temporal artifacts. You can assume the "real" number is between the two values.

Conclusion
----------

Results are a mixed bag, the Striped64 implementation scale better as the thread count increased over actualy CPU core count and contention increases.

StripedLocal offers a much simpler implementation with similar performance characteristics with much less code, and importantly no sun.misc.Unsafe() usage.

Results
-------

Threads=1
  Control          Duration=1.0270s

  Atomic1          Duration=0.4990s
  StripedAtomic1   Duration=0.6320s
  StripedLock1     Duration=1.6930s
  Striped641       Duration=0.5760s
  StripedLocal1    Duration=0.6140s

  Atomic2          Duration=0.5240s
  StripedAtomic2   Duration=0.6190s
  StripedLock2     Duration=0.5480s
  Striped642       Duration=0.5670s
  StripedLocal2    Duration=0.9030s

Threads=2
  Control          Duration=3.9840s

  Atomic1          Duration=3.5070s
  StripedAtomic1   Duration=0.8330s
  StripedLock1     Duration=1.9890s
  Striped641       Duration=0.9850s
  StripedLocal1    Duration=0.9930s

  Atomic2          Duration=2.1370s
  StripedAtomic2   Duration=1.5200s
  StripedLock2     Duration=1.9810s
  Striped642       Duration=0.8970s
  StripedLocal2    Duration=1.5350s

Threads=4
  Control          Duration=8.7310s

  Atomic1          Duration=6.1890s
  StripedAtomic1   Duration=2.2150s
  StripedLock1     Duration=3.1600s
  Striped641       Duration=1.1830s
  StripedLocal1    Duration=1.1060s

  Atomic2          Duration=5.5340s
  StripedAtomic2   Duration=2.5090s
  StripedLock2     Duration=3.0620s
  Striped642       Duration=1.1620s
  StripedLocal2    Duration=1.0870s

Threads=8
  Control          Duration=18.6700s

  Atomic1          Duration=14.5450s
  StripedAtomic1   Duration=3.7750s
  StripedLock1     Duration=4.6210s
  Striped641       Duration=1.6710s
  StripedLocal1    Duration=2.9340s

  Atomic2          Duration=12.9900s
  StripedAtomic2   Duration=3.6750s
  StripedLock2     Duration=4.0460s
  Striped642       Duration=1.6830s
  StripedLocal2    Duration=3.1120s

Threads=16
  Control          Duration=36.3160s

  Atomic1          Duration=28.2250s
  StripedAtomic1   Duration=6.6630s
  StripedLock1     Duration=8.5420s
  Striped641       Duration=3.4110s
  StripedLocal1    Duration=4.3410s

  Atomic2          Duration=26.8860s
  StripedAtomic2   Duration=6.7430s
  StripedLock2     Duration=8.7190s
  Striped642       Duration=3.3340s
  StripedLocal2    Duration=5.6160s